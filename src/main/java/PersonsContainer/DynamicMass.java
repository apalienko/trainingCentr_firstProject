package PersonsContainer;

/**
 * Интерфейс, описывающий функциональность стэка.
 * 
 * @param <V> Тип, хранимый в стэке
 */
public interface DynamicMass<V>{

	/**
	 * Помещает данные в первую свободную ячейку массива,
	 * если массив переполнен, расширяет его
	 * 
	 * @param elem - данные для записи
	 */
	public void push(V elem); 	
	
	/**
	 * Помещает данные в массив по заданному индексу, если 
	 * там уже находились данные, то презаписывает их
	 * 
	 * @param elem - данные для записи
	 * @param index - индекс для записи
	 */
	public void put(V elem, int index);
	
	/**
	 * Возвращает данные, находящиеся в массиве по заданному
	 * индексу
	 * 
	 * @param index - индекс в массиве
	 * @return данные, находящиеся на позиции <b>index</b>
	 */
	public V get(int index) throws IndexOutOfBoundsException ;
	
	/**
	 * Если удается найти переданные данные, то возвращает
	 * индекс, по которому они расположениы в массиве, иначе
	 * возвращает -1
	 * 
	 * @param elem - данные
	 * @return индекс данных в массиве
	 */
	public int indexOf(V elem);
	
	/**
	 * Удаляет элемент по заданному индексу, ставя на его место null,
	 * если в результате в массиве вторая его половина (начиная с середины)
	 * оказалось полностью пустой, она полностью удаляется
	 * 
	 * @param index - индекс удаляемого элемента
	 */
	public void delete(int index);
	
	/**
	 * @return количество элементов в массиве на текущий момент
	 */
	public int curSize();
	
	/**
	 * @return длинну массива
	 */
	public int length();
}
